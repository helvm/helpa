module HelVM.HelPA.Assemblers.Frontend.WSA.TestData where

import           HelVM.HelPA.Assemblers.Backend.WSA.Token
import           HelVM.HelPA.Assemblers.Frontend.WSA.Instruction

ioIL :: InstructionList
ioIL =
  [Mark "prints",Dup,BranchZ "prints_end",OutputChar,Branch "prints"
  ,Mark "prints_end",Pop,Return
  ,Mark "printsln",Call "prints",Push 10,OutputChar,Return
  ]

ioTL :: TokenList
ioTL = [N,S,S,S,T,T,T,S,S,S,S,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,S,S,T,T,T,S,S,T,T,N,S,N,S,N,T,S,S,T,T,T,S,S,S,S,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,S,S,T,T,T,S,S,T,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,T,S,S,T,T,S,S,T,S,S,N,T,N,S,S,N,S,N,S,T,T,T,S,S,S,S,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,S,S,T,T,T,S,S,T,T,N,N,S,S,S,T,T,T,S,S,S,S,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,S,S,T,T,T,S,S,T,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,T,S,S,T,T,S,S,T,S,S,N,S,S,N,N,T,N,N,S,S,S,T,T,T,S,S,S,S,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,S,S,T,T,T,S,S,T,T,S,T,T,S,T,T,S,S,S,T,T,S,T,T,T,S,N,N,S,T,S,T,T,T,S,S,S,S,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,S,S,T,T,T,S,S,T,T,N,S,S,S,T,S,T,S,T,N,S,S,N,T,N]

ioWS :: String
ioWS = ""

----

memoryIL :: InstructionList
memoryIL =
  [Mark "memcopy"
  ,Mark "mem_copy"
  ,Mark "mem_move",Push 3,Swap,Store Nothing,Push 2,Swap,Store Nothing,Push 1,Swap,Store Nothing,Load (Just 3),BranchNP "memcopy_end"
  ,Load (Just 1),Load (Just 2),Sub Nothing,BranchZ "memcopy_end"
  ,Load (Just 1),Load (Just 2),Sub Nothing,BranchM "memcopy_loop_dest_greater_source_begin"
  ,Branch "memcopy_loop_source_greater_dest"
  ,Mark "memcopy_loop_source_greater_dest",Push 2,Load Nothing,Push 1,Load Nothing,Load Nothing,Store Nothing,Push 2,Push 2,Load Nothing,Push 1,Add Nothing,Store Nothing,Push 1,Push 1,Load Nothing,Push 1,Add Nothing,Store Nothing,Push 3,Push 3,Load Nothing,Push 1,Sub Nothing,Store Nothing,Load (Just 3)
  ,BranchZ "memcopy_end"
  ,Branch "memcopy_loop_source_greater_dest"
  ,Mark "memcopy_loop_dest_greater_source_begin",Push 2,Push 2,Load Nothing,Push 3,Load Nothing,Add Nothing,Push 1,Sub Nothing,Store Nothing,Push 1,Push 1,Load Nothing,Push 3,Load Nothing,Add Nothing,Push 1,Sub Nothing,Store Nothing
  ,Mark "memcopy_loop_dest_greater_source",Push 2,Load Nothing,Push 1,Load Nothing,Load Nothing,Store Nothing,Push 2,Push 2,Load Nothing,Push 1,Sub Nothing,Store Nothing,Push 1,Push 1,Load Nothing,Push 1,Sub Nothing,Store Nothing,Push 3,Push 3,Load Nothing,Push 1,Sub Nothing,Store Nothing,Load (Just 3)
  ,BranchZ "memcopy_end"
  ,Branch "memcopy_loop_dest_greater_source"
  ,Mark "memcopy_end",Return
  ,Mark "mem_zero"
  ,Mark "mem_zero_start",Dup,BranchZ "mem_zero_end"
  ,Swap,Dup,Push 0,Store Nothing,Push 1,Add Nothing,Swap,Push 1,Sub Nothing,Branch "mem_zero_start"
  ,Mark "mem_zero_end",Pop,Pop,Return
  ,Mark "numeriere",Push 2,Swap,Store Nothing,Push 1,Swap,Store Nothing,Push 1,Load Nothing
  ,Mark "numeriere_start",Dup,Dup,Store Nothing,Push 1,Add Nothing,Dup,Push 2,Load Nothing,Sub Nothing
  ,BranchZ "numeriere_end"
  ,Branch "numeriere_start"
  ,Mark "numeriere_end"
  ,Pop,Return
  ]

memoryTL :: TokenList
memoryTL =  [N,S,S,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,N,N,S,S,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,S,T,T,T,T,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,N,N,S,S,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,S,T,T,T,T,T,S,T,T,S,T,T,S,T,S,T,T,S,T,T,T,T,S,T,T,T,S,T,T,S,S,T,T,S,S,T,S,T,N,S,S,S,T,T,S,N,T,T,T,S,S,S,S,T,S,S,N,T,T,T,S,S,S,S,T,S,N,T,T,T,S,S,S,S,T,T,T,T,T,S,N,S,N,T,T,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,T,S,S,T,T,S,S,T,S,S,S,S,T,T,T,S,T,S,S,S,T,T,S,S,S,T,N,S,N,S,N,T,S,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,T,S,S,T,T,S,S,T,S,S,S,S,T,T,T,S,T,S,S,S,T,T,S,S,S,T,N,N,S,N,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,T,S,S,T,T,S,S,T,S,S,S,S,T,T,T,S,T,S,S,S,T,T,S,S,T,S,N,N,S,S,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,T,S,S,T,T,S,S,T,S,S,S,S,T,T,T,S,T,S,S,S,T,T,S,S,S,T,N,S,S,N,N,S,N,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,T,S,S,T,T,S,S,T,S,S,N,N,S,S,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,T,S,S,T,T,S,S,T,S,S,S,S,T,T,T,S,T,S,S,S,T,T,S,S,T,S,N,S,S,N,S,S,S,T,T,T,T,S,S,S,T,S,T,T,T,T,S,S,T,N,T,S,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,T,S,S,T,T,S,S,T,S,S,N,S,S,S,T,T,T,T,S,S,S,T,S,T,T,T,T,S,S,T,N,T,T,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,S,T,S,T,T,T,T,T,S,T,T,S,T,T,S,S,S,T,T,S,T,T,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,T,T,S,T,T,T,S,S,T,S,S,T,T,S,S,T,S,T,S,T,T,S,S,S,S,T,S,T,T,T,S,T,S,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,S,S,T,T,S,T,T,S,S,T,S,T,S,T,S,T,T,T,T,T,S,T,T,S,S,S,T,S,S,T,T,S,S,T,S,T,S,T,T,S,S,T,T,T,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,N,N,S,N,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,S,T,S,T,T,T,T,T,S,T,T,S,T,T,S,S,S,T,T,S,T,T,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,S,S,T,T,S,T,T,S,S,T,S,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,T,T,S,T,T,T,S,S,T,S,S,T,T,S,S,T,S,T,S,T,T,S,S,S,S,T,S,T,T,T,S,T,S,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,N,N,S,S,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,S,T,S,T,T,T,T,T,S,T,T,S,T,T,S,S,S,T,T,S,T,T,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,S,S,T,T,S,T,T,S,S,T,S,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,T,T,S,T,T,T,S,S,T,S,S,T,T,S,S,T,S,T,S,T,T,S,S,S,S,T,S,T,T,T,S,T,S,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,N,S,S,S,T,S,T,T,T,S,S,S,T,T,T,T,T,T,T,T,T,S,S,S,S,T,S,S,S,S,T,S,T,T,T,S,S,S,T,T,S,S,S,T,T,S,S,S,S,T,S,S,S,T,T,T,T,S,S,S,T,T,S,S,S,T,T,S,S,S,S,T,T,S,S,S,T,T,T,T,T,S,S,S,T,T,S,S,T,T,T,S,S,S,S,T,T,T,T,T,N,T,S,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,T,S,S,T,T,S,S,T,S,S,N,N,S,N,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,S,T,S,T,T,T,T,T,S,T,T,S,T,T,S,S,S,T,T,S,T,T,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,S,S,T,T,S,T,T,S,S,T,S,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,T,T,S,T,T,T,S,S,T,S,S,T,T,S,S,T,S,T,S,T,T,S,S,S,S,T,S,T,T,T,S,T,S,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,N,N,S,S,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,S,T,S,T,T,T,T,T,S,T,T,S,T,T,S,S,S,T,T,S,T,T,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,T,T,S,T,T,T,S,S,T,S,S,T,T,S,S,T,S,T,S,T,T,S,S,S,S,T,S,T,T,T,S,T,S,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,S,S,T,T,S,T,T,S,S,T,S,T,S,T,S,T,T,T,T,T,S,T,T,S,S,S,T,S,S,T,T,S,S,T,S,T,S,T,T,S,S,T,T,T,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,N,S,S,S,T,S,S,S,S,T,S,T,T,T,S,S,S,T,T,T,T,T,T,S,S,S,S,S,S,T,T,S,S,T,T,T,S,S,S,S,T,S,S,S,T,T,T,T,S,S,S,T,T,T,T,T,T,S,S,S,S,S,S,T,T,S,S,T,T,T,S,N,S,S,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,S,T,S,T,T,T,T,T,S,T,T,S,T,T,S,S,S,T,T,S,T,T,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,T,T,S,T,T,T,S,S,T,S,S,T,T,S,S,T,S,T,S,T,T,S,S,S,S,T,S,T,T,T,S,T,S,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,S,S,T,T,S,T,T,S,S,T,S,T,N,S,S,S,T,S,T,T,T,S,S,S,T,T,T,T,T,T,T,T,T,S,S,S,S,T,S,S,S,S,T,S,T,T,T,S,S,S,T,T,S,S,T,T,T,S,S,S,S,T,S,S,S,T,T,T,T,S,S,S,T,T,S,S,T,T,T,S,S,S,S,T,T,S,S,S,T,T,T,T,T,S,S,S,T,T,S,S,T,T,T,S,S,S,S,T,T,T,T,T,N,T,S,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,T,S,S,T,T,S,S,T,S,S,N,N,S,N,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,S,T,S,T,T,T,T,T,S,T,T,S,T,T,S,S,S,T,T,S,T,T,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,T,T,S,T,T,T,S,S,T,S,S,T,T,S,S,T,S,T,S,T,T,S,S,S,S,T,S,T,T,T,S,T,S,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,S,S,T,T,S,T,T,S,S,T,S,T,N,N,S,S,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,S,T,T,S,T,T,S,T,T,T,T,S,T,T,T,S,S,S,S,S,T,T,T,T,S,S,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,T,S,S,T,T,S,S,T,S,S,N,N,T,N,N,S,S,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,S,T,T,T,T,T,S,T,T,T,T,S,T,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,T,T,T,T,N,N,S,S,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,S,T,T,T,T,T,S,T,T,T,T,S,T,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,T,T,T,T,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,S,T,T,S,S,S,S,T,S,T,T,T,S,S,T,S,S,T,T,T,S,T,S,S,N,S,N,S,N,T,S,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,S,T,T,T,T,T,S,T,T,T,T,S,T,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,T,T,T,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,T,S,S,T,T,S,S,T,S,S,N,S,N,T,S,N,S,S,S,S,T,T,S,S,S,S,T,T,S,S,S,S,N,T,S,S,S,T,T,S,S,T,N,S,N,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,S,T,T,T,T,T,S,T,T,T,T,S,T,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,T,T,T,T,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,S,T,T,S,S,S,S,T,S,T,T,T,S,S,T,S,S,T,T,T,S,T,S,S,N,N,S,S,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,S,T,S,T,S,T,T,T,T,T,S,T,T,T,T,S,T,S,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,T,T,T,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,T,S,S,T,T,S,S,T,S,S,N,S,S,N,S,S,N,N,T,N,N,S,S,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,S,T,S,T,N,S,S,S,T,S,S,N,T,T,T,S,S,S,S,T,S,N,T,T,T,S,S,S,S,T,T,T,T,N,S,S,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,S,T,S,T,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,S,T,T,S,S,S,S,T,S,T,T,T,S,S,T,S,S,T,T,T,S,T,S,S,N,S,N,S,S,N,S,T,T,S,S,S,S,T,T,S,S,S,S,N,S,S,S,S,T,S,T,T,T,T,S,S,T,N,T,S,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,S,T,S,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,T,S,S,T,T,S,S,T,S,S,N,N,S,N,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,S,T,S,T,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,S,T,T,S,S,S,S,T,S,T,T,T,S,S,T,S,S,T,T,T,S,T,S,S,N,N,S,S,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,T,S,T,T,S,T,T,S,T,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,S,T,S,T,S,T,T,T,S,S,T,S,S,T,T,S,S,T,S,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,T,S,S,T,T,S,S,T,S,S,N,S,S,N,N,T,N]

memoryWS :: String
memoryWS = ""

----

primIL :: InstructionList
primIL =
  [Mark "st",PushS "prim numbers [2-100]",Call "printsln",Push 0
  ,Mark "f_start_1",Test 100,BranchZ "f_finished_1",Dup,Add (Just 100),Push 1,Store Nothing,Add (Just 1),Branch "f_start_1"
  ,Mark "f_finished_1",Pop,Push 2
  ,Mark "f_start_2",Test 11,BranchZ "f_finished_2",Push 2
  ,Mark "f_start_3",Test 100,BranchZ "f_finished_3"
  ,Dup,Push 1,Swap,Store Nothing,Swap,Dup,Push 2,Swap,Store Nothing,Swap,Load (Just 1),Load (Just 2),Mul Nothing,Add (Just 100),Push 0,Store Nothing,Add (Just 1),Branch "f_start_3"
  ,Mark "f_finished_3",Pop,Add (Just 1),Branch "f_start_2"
  ,Mark "f_finished_2",Pop,Push 2
  ,Mark "f_start_4",Test 100,BranchZ "f_finished_4",Dup,Add (Just 100),Load Nothing,BranchZ "nodraw",Dup,OutputNum,PushS " ",Call "prints"
  ,Mark "nodraw",Add (Just 1),Branch "f_start_4"
  ,Mark "f_finished_4",Pop,Push 0,Call "printsln",End
  ]

primTL :: TokenList
primTL = [N,S,S,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,N,S,S,S,S,S,S,T,S,T,T,T,S,T,S,S,S,T,T,S,S,S,S,S,S,S,T,T,S,S,S,S,S,S,S,T,T,S,S,S,T,S,S,S,T,S,T,T,S,T,S,S,S,T,T,S,S,T,S,S,S,S,T,S,T,T,S,T,T,S,S,S,T,S,S,S,S,S,S,S,S,T,T,T,S,S,T,T,S,S,S,T,T,T,S,S,T,S,S,S,S,T,T,S,S,T,S,T,S,S,S,T,T,S,S,S,T,S,S,S,S,T,T,S,T,T,S,T,S,S,S,T,T,T,S,T,S,T,S,S,S,T,T,S,T,T,T,S,S,S,S,T,S,S,S,S,S,S,S,S,T,T,S,T,T,S,T,S,S,S,T,T,S,T,S,S,T,S,S,S,T,T,T,S,S,T,S,S,S,S,T,T,T,S,S,S,S,N,S,T,S,T,T,T,S,S,S,S,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,S,S,T,T,T,S,S,T,T,S,T,T,S,T,T,S,S,S,T,T,S,T,T,T,S,N,S,S,S,N,S,S,S,T,T,S,S,T,T,S,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,S,T,T,S,S,S,S,T,S,T,T,T,S,S,T,S,S,T,T,T,S,T,S,S,S,T,S,T,T,T,T,T,S,S,T,T,S,S,S,T,N,S,N,S,S,S,S,T,T,S,S,T,S,S,T,S,S,T,N,T,S,S,T,T,S,S,T,T,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,S,T,S,S,T,S,T,T,T,S,S,T,T,S,T,T,S,T,S,S,S,S,T,T,S,S,T,S,T,S,T,T,S,S,T,S,S,S,T,S,T,T,T,T,T,S,S,T,T,S,S,S,T,N,S,N,S,S,S,S,T,T,S,S,T,S,S,T,S,S,S,S,S,S,T,T,T,S,S,S,S,T,T,S,S,S,N,S,N,S,T,T,S,S,T,T,S,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,S,T,T,S,S,S,S,T,S,T,T,T,S,S,T,S,S,T,T,T,S,T,S,S,S,T,S,T,T,T,T,T,S,S,T,T,S,S,S,T,N,N,S,S,S,T,T,S,S,T,T,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,S,T,S,S,T,S,T,T,T,S,S,T,T,S,T,T,S,T,S,S,S,S,T,T,S,S,T,S,T,S,T,T,S,S,T,S,S,S,T,S,T,T,T,T,T,S,S,T,T,S,S,S,T,N,S,S,N,S,S,S,T,S,N,S,S,S,T,T,S,S,T,T,S,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,S,T,T,S,S,S,S,T,S,T,T,T,S,S,T,S,S,T,T,T,S,T,S,S,S,T,S,T,T,T,T,T,S,S,T,T,S,S,T,S,N,S,N,S,S,S,S,T,S,T,T,T,S,S,T,N,T,S,S,T,T,S,S,T,T,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,S,T,S,S,T,S,T,T,T,S,S,T,T,S,T,T,S,T,S,S,S,S,T,T,S,S,T,S,T,S,T,T,S,S,T,S,S,S,T,S,T,T,T,T,T,S,S,T,T,S,S,T,S,N,S,S,S,T,S,N,S,S,S,T,T,S,S,T,T,S,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,S,T,T,S,S,S,S,T,S,T,T,T,S,S,T,S,S,T,T,T,S,T,S,S,S,T,S,T,T,T,T,T,S,S,T,T,S,S,T,T,N,S,N,S,S,S,S,T,T,S,S,T,S,S,T,S,S,T,N,T,S,S,T,T,S,S,T,T,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,S,T,S,S,T,S,T,T,T,S,S,T,T,S,T,T,S,T,S,S,S,S,T,T,S,S,T,S,T,S,T,T,S,S,T,S,S,S,T,S,T,T,T,T,T,S,S,T,T,S,S,T,T,N,S,N,S,S,S,S,T,S,N,T,T,T,S,S,N,T,S,N,S,S,S,S,T,S,S,N,T,T,T,S,S,N,T,S,S,S,T,T,T,T,S,S,S,T,S,T,T,T,T,S,S,N,S,S,S,T,T,S,S,T,S,S,T,S,S,S,S,S,S,T,T,S,S,S,S,T,T,S,S,S,N,S,N,S,T,T,S,S,T,T,S,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,S,T,T,S,S,S,S,T,S,T,T,T,S,S,T,S,S,T,T,T,S,T,S,S,S,T,S,T,T,T,T,T,S,S,T,T,S,S,T,T,N,N,S,S,S,T,T,S,S,T,T,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,S,T,S,S,T,S,T,T,T,S,S,T,T,S,T,T,S,T,S,S,S,S,T,T,S,S,T,S,T,S,T,T,S,S,T,S,S,S,T,S,T,T,T,T,T,S,S,T,T,S,S,T,T,N,S,S,N,S,S,S,T,T,S,S,S,N,S,N,S,T,T,S,S,T,T,S,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,S,T,T,S,S,S,S,T,S,T,T,T,S,S,T,S,S,T,T,T,S,T,S,S,S,T,S,T,T,T,T,T,S,S,T,T,S,S,T,S,N,N,S,S,S,T,T,S,S,T,T,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,S,T,S,S,T,S,T,T,T,S,S,T,T,S,T,T,S,T,S,S,S,S,T,T,S,S,T,S,T,S,T,T,S,S,T,S,S,S,T,S,T,T,T,T,T,S,S,T,T,S,S,T,S,N,S,S,N,S,S,S,T,S,N,S,S,S,T,T,S,S,T,T,S,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,S,T,T,S,S,S,S,T,S,T,T,T,S,S,T,S,S,T,T,T,S,T,S,S,S,T,S,T,T,T,T,T,S,S,T,T,S,T,S,S,N,S,N,S,S,S,S,T,T,S,S,T,S,S,T,S,S,T,N,T,S,S,T,T,S,S,T,T,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,S,T,S,S,T,S,T,T,T,S,S,T,T,S,T,T,S,T,S,S,S,S,T,T,S,S,T,S,T,S,T,T,S,S,T,S,S,S,T,S,T,T,T,T,T,S,S,T,T,S,T,S,S,N,S,N,S,S,S,S,T,T,S,S,T,S,S,T,S,S,S,T,T,T,N,T,S,S,T,T,S,T,T,T,S,S,T,T,S,T,T,T,T,S,T,T,S,S,T,S,S,S,T,T,T,S,S,T,S,S,T,T,S,S,S,S,T,S,T,T,T,S,T,T,T,N,S,N,S,T,N,S,T,S,S,S,S,S,S,T,S,S,S,S,S,N,S,T,S,T,T,T,S,S,S,S,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,S,S,T,T,T,S,S,T,T,N,N,S,S,S,T,T,S,T,T,T,S,S,T,T,S,T,T,T,T,S,T,T,S,S,T,S,S,S,T,T,T,S,S,T,S,S,T,T,S,S,S,S,T,S,T,T,T,S,T,T,T,N,S,S,S,T,T,S,S,S,N,S,N,S,T,T,S,S,T,T,S,S,T,S,T,T,T,T,T,S,T,T,T,S,S,T,T,S,T,T,T,S,T,S,S,S,T,T,S,S,S,S,T,S,T,T,T,S,S,T,S,S,T,T,T,S,T,S,S,S,T,S,T,T,T,T,T,S,S,T,T,S,T,S,S,N,N,S,S,S,T,T,S,S,T,T,S,S,T,S,T,T,T,T,T,S,T,T,S,S,T,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,S,T,S,S,T,S,T,T,T,S,S,T,T,S,T,T,S,T,S,S,S,S,T,T,S,S,T,S,T,S,T,T,S,S,T,S,S,S,T,S,T,T,T,T,T,S,S,T,T,S,T,S,S,N,S,S,N,S,S,S,N,S,T,S,T,T,T,S,S,S,S,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,S,S,T,T,T,S,S,T,T,S,T,T,S,T,T,S,S,S,T,T,S,T,T,T,S,N,N,N,N,N,S,S,S,T,T,T,S,S,S,S,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,S,S,T,T,T,S,S,T,T,N,S,N,S,N,T,S,S,T,T,T,S,S,S,S,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,S,S,T,T,T,S,S,T,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,T,S,S,T,T,S,S,T,S,S,N,T,N,S,S,N,S,N,S,T,T,T,S,S,S,S,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,S,S,T,T,T,S,S,T,T,N,N,S,S,S,T,T,T,S,S,S,S,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,S,S,T,T,T,S,S,T,T,S,T,S,T,T,T,T,T,S,T,T,S,S,T,S,T,S,T,T,S,T,T,T,S,S,T,T,S,S,T,S,S,N,S,S,N,N,T,N,N,S,S,S,T,T,T,S,S,S,S,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,S,S,T,T,T,S,S,T,T,S,T,T,S,T,T,S,S,S,T,T,S,T,T,T,S,N,N,S,T,S,T,T,T,S,S,S,S,S,T,T,T,S,S,T,S,S,T,T,S,T,S,S,T,S,T,T,S,T,T,T,S,S,T,T,T,S,T,S,S,S,T,T,T,S,S,T,T,N,S,S,S,T,S,T,S,T,N,S,S,N,T,N]

primWS :: String
primWS = ""
